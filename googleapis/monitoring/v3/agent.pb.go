// Code generated by protoc-gen-go.
// source: google.golang.org/genproto/googleapis/monitoring/v3/agent.proto
// DO NOT EDIT!

/*
Package google_monitoring_v3 is a generated protocol buffer package.

It is generated from these files:
	google.golang.org/genproto/googleapis/monitoring/v3/agent.proto
	google.golang.org/genproto/googleapis/monitoring/v3/agent_service.proto
	google.golang.org/genproto/googleapis/monitoring/v3/common.proto
	google.golang.org/genproto/googleapis/monitoring/v3/group.proto
	google.golang.org/genproto/googleapis/monitoring/v3/group_service.proto
	google.golang.org/genproto/googleapis/monitoring/v3/metric.proto
	google.golang.org/genproto/googleapis/monitoring/v3/metric_service.proto

It has these top-level messages:
	CollectdValue
	CollectdPayload
	CreateCollectdTimeSeriesRequest
	TypedValue
	TimeInterval
	Aggregation
	Group
	ListGroupsRequest
	ListGroupsResponse
	GetGroupRequest
	CreateGroupRequest
	UpdateGroupRequest
	DeleteGroupRequest
	ListGroupMembersRequest
	ListGroupMembersResponse
	Point
	TimeSeries
	ListMonitoredResourceDescriptorsRequest
	ListMonitoredResourceDescriptorsResponse
	GetMonitoredResourceDescriptorRequest
	ListMetricDescriptorsRequest
	ListMetricDescriptorsResponse
	GetMetricDescriptorRequest
	CreateMetricDescriptorRequest
	DeleteMetricDescriptorRequest
	ListTimeSeriesRequest
	ListTimeSeriesResponse
	CreateTimeSeriesRequest
	CreateTimeSeriesError
*/
package google_monitoring_v3

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/serviceconfig"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The type of measurement for the data source.
type CollectdValue_DataSourceType int32

const (
	// An unspecified data source type.
	// This corresponds to [google.api.MetricDescriptor.MetricKind.METRIC_KIND_UNSPECIFIED].
	CollectdValue_UNSPECIFIED_DATA_SOURCE_TYPE CollectdValue_DataSourceType = 0
	// An instantaneous measurement of a varying quantity.
	// This corresponds to [google.api.MetricDescriptor.MetricKind.GAUGE].
	CollectdValue_GAUGE CollectdValue_DataSourceType = 1
	// A cumulative value over time.
	// This corresponds to [google.api.MetricDescriptor.MetricKind.CUMULATIVE].
	CollectdValue_COUNTER CollectdValue_DataSourceType = 2
	// A rate of change of the measurement.
	CollectdValue_DERIVE CollectdValue_DataSourceType = 3
	// An amount of change since the last measurement interval.
	// This corresponds to [google.api.MetricDescriptor.MetricKind.DELTA].
	CollectdValue_ABSOLUTE CollectdValue_DataSourceType = 4
)

var CollectdValue_DataSourceType_name = map[int32]string{
	0: "UNSPECIFIED_DATA_SOURCE_TYPE",
	1: "GAUGE",
	2: "COUNTER",
	3: "DERIVE",
	4: "ABSOLUTE",
}
var CollectdValue_DataSourceType_value = map[string]int32{
	"UNSPECIFIED_DATA_SOURCE_TYPE": 0,
	"GAUGE":    1,
	"COUNTER":  2,
	"DERIVE":   3,
	"ABSOLUTE": 4,
}

func (x CollectdValue_DataSourceType) String() string {
	return proto.EnumName(CollectdValue_DataSourceType_name, int32(x))
}
func (CollectdValue_DataSourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

// A single data point from a `collectd`-based plugin.
type CollectdValue struct {
	// The data source for the `collectd` value. For example there are
	// two data sources for network measurements: `"rx"` and `"tx"`.
	DataSourceName string `protobuf:"bytes,1,opt,name=data_source_name,json=dataSourceName" json:"data_source_name,omitempty"`
	// The type of measurement.
	DataSourceType CollectdValue_DataSourceType `protobuf:"varint,2,opt,name=data_source_type,json=dataSourceType,enum=google.monitoring.v3.CollectdValue_DataSourceType" json:"data_source_type,omitempty"`
	// The measurement value.
	Value *TypedValue `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *CollectdValue) Reset()                    { *m = CollectdValue{} }
func (m *CollectdValue) String() string            { return proto.CompactTextString(m) }
func (*CollectdValue) ProtoMessage()               {}
func (*CollectdValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CollectdValue) GetValue() *TypedValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// A collection of data points sent from a `collectd`-based plugin.
// See the `collectd` documentation for more information.
type CollectdPayload struct {
	// The measured values during this time interval.
	// Each value must have a different `dataSourceName`.
	Values []*CollectdValue `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	// The start time of the interval.
	StartTime *google_protobuf2.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	// The end time of the interval.
	EndTime *google_protobuf2.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	// The name of the plugin. Example: `"disk"`.
	Plugin string `protobuf:"bytes,4,opt,name=plugin" json:"plugin,omitempty"`
	// The instance name of the plugin Example: `"hdcl"`.
	PluginInstance string `protobuf:"bytes,5,opt,name=plugin_instance,json=pluginInstance" json:"plugin_instance,omitempty"`
	// The measurement type. Example: `"memory"`.
	Type string `protobuf:"bytes,6,opt,name=type" json:"type,omitempty"`
	// The measurement type instance. Example: `"used"`.
	TypeInstance string `protobuf:"bytes,7,opt,name=type_instance,json=typeInstance" json:"type_instance,omitempty"`
	// The measurement metadata. Example: `"process_id" -> 12345`
	Metadata map[string]*TypedValue `protobuf:"bytes,8,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CollectdPayload) Reset()                    { *m = CollectdPayload{} }
func (m *CollectdPayload) String() string            { return proto.CompactTextString(m) }
func (*CollectdPayload) ProtoMessage()               {}
func (*CollectdPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CollectdPayload) GetValues() []*CollectdValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *CollectdPayload) GetStartTime() *google_protobuf2.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CollectdPayload) GetEndTime() *google_protobuf2.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CollectdPayload) GetMetadata() map[string]*TypedValue {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*CollectdValue)(nil), "google.monitoring.v3.CollectdValue")
	proto.RegisterType((*CollectdPayload)(nil), "google.monitoring.v3.CollectdPayload")
	proto.RegisterEnum("google.monitoring.v3.CollectdValue_DataSourceType", CollectdValue_DataSourceType_name, CollectdValue_DataSourceType_value)
}

func init() {
	proto.RegisterFile("google.golang.org/genproto/googleapis/monitoring/v3/agent.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0x8f, 0xd2, 0x40,
	0x14, 0x15, 0xba, 0xcb, 0xb2, 0x97, 0x85, 0x6d, 0x26, 0xc6, 0x34, 0xc4, 0x07, 0xc2, 0x3e, 0xc8,
	0x53, 0x9b, 0x40, 0x34, 0xea, 0x3e, 0x28, 0x1f, 0x75, 0x43, 0xa2, 0x40, 0x4a, 0xd9, 0xc4, 0x44,
	0xd3, 0x0c, 0x65, 0xb6, 0x36, 0xb6, 0x33, 0x4d, 0x3b, 0x90, 0xf0, 0xc3, 0xfc, 0x53, 0xfe, 0x0a,
	0x67, 0xa6, 0x05, 0x24, 0x21, 0xba, 0xfa, 0x02, 0x77, 0xee, 0x3d, 0xe7, 0xcc, 0xf4, 0x9c, 0x69,
	0xe1, 0x5d, 0xc0, 0x58, 0x10, 0x11, 0x33, 0x60, 0x11, 0xa6, 0x81, 0xc9, 0xd2, 0xc0, 0x0a, 0x08,
	0x4d, 0x52, 0xc6, 0x99, 0x95, 0x8f, 0x70, 0x12, 0x66, 0x56, 0xcc, 0x68, 0xc8, 0x59, 0x1a, 0xd2,
	0xc0, 0xda, 0xf4, 0x2c, 0x2c, 0x20, 0xdc, 0x54, 0x20, 0xf4, 0xb4, 0x10, 0x38, 0x20, 0xcc, 0x4d,
	0xaf, 0x39, 0x7e, 0x9c, 0xac, 0xf8, 0xb1, 0x32, 0x92, 0x6e, 0x42, 0x9f, 0xf8, 0x8c, 0x3e, 0x84,
	0x81, 0x85, 0x29, 0x65, 0x1c, 0xf3, 0x90, 0xd1, 0x2c, 0xdf, 0xa0, 0xf9, 0xfe, 0x7f, 0x4e, 0xe8,
	0xb3, 0x58, 0x34, 0x0a, 0x85, 0xdb, 0x20, 0xe4, 0xdf, 0xd6, 0x4b, 0x53, 0x34, 0xad, 0x5c, 0xc5,
	0x52, 0x83, 0xe5, 0xfa, 0xc1, 0x4a, 0xf8, 0x36, 0x21, 0x99, 0xc5, 0xc3, 0x98, 0x64, 0x1c, 0xc7,
	0xc9, 0xa1, 0xca, 0xc9, 0xed, 0x1f, 0x65, 0xa8, 0x0f, 0x59, 0x14, 0x11, 0x9f, 0xaf, 0xee, 0x71,
	0xb4, 0x26, 0xa8, 0x03, 0xfa, 0x0a, 0x73, 0xec, 0x65, 0x6c, 0x9d, 0xfa, 0xc4, 0xa3, 0x38, 0x26,
	0x46, 0xa9, 0x55, 0xea, 0x5c, 0x3a, 0x0d, 0xd9, 0x9f, 0xab, 0xf6, 0x44, 0x74, 0xd1, 0x97, 0x63,
	0xa4, 0xdc, 0xca, 0x28, 0x0b, 0x64, 0xa3, 0xdb, 0x35, 0x4f, 0xd9, 0x66, 0x1e, 0x6d, 0x64, 0x8e,
	0xf6, 0x6a, 0xae, 0x60, 0xfe, 0xae, 0x2e, 0xd7, 0xe8, 0x15, 0x9c, 0x6f, 0x24, 0xce, 0xd0, 0x84,
	0x64, 0xad, 0xdb, 0x3a, 0x2d, 0x29, 0xa1, 0xb9, 0x9e, 0x93, 0xc3, 0xdb, 0x2b, 0x68, 0x1c, 0x2b,
	0xa3, 0x16, 0x3c, 0x5f, 0x4c, 0xe6, 0x33, 0x7b, 0x38, 0xfe, 0x30, 0xb6, 0x47, 0xde, 0xa8, 0xef,
	0xf6, 0xbd, 0xf9, 0x74, 0xe1, 0x0c, 0x6d, 0xcf, 0xfd, 0x3c, 0xb3, 0xf5, 0x27, 0xe8, 0x12, 0xce,
	0xef, 0xfa, 0x8b, 0x3b, 0x5b, 0x2f, 0xa1, 0x1a, 0x5c, 0x0c, 0xa7, 0x8b, 0x89, 0x6b, 0x3b, 0x7a,
	0x19, 0x01, 0x54, 0x46, 0xb6, 0x33, 0xbe, 0xb7, 0x75, 0x0d, 0x5d, 0x41, 0xb5, 0x3f, 0x98, 0x4f,
	0x3f, 0x2e, 0x5c, 0x5b, 0x3f, 0x6b, 0xff, 0xd4, 0xe0, 0x7a, 0xf7, 0x38, 0x33, 0xbc, 0x8d, 0x18,
	0x5e, 0xa1, 0x5b, 0xa8, 0xa8, 0x23, 0x64, 0xc2, 0x2f, 0x4d, 0x1c, 0xf9, 0xe6, 0x11, 0x2e, 0x38,
	0x05, 0x05, 0xbd, 0x01, 0x10, 0xb9, 0xa4, 0xdc, 0x93, 0x09, 0x29, 0x1b, 0x6b, 0xdd, 0xe6, 0x4e,
	0x60, 0x97, 0xa7, 0xe9, 0xee, 0xe2, 0x73, 0x2e, 0x15, 0x5a, 0xae, 0xd1, 0x4b, 0xa8, 0x12, 0xba,
	0xca, 0x89, 0xda, 0x5f, 0x89, 0x17, 0x02, 0xab, 0x68, 0xcf, 0xa0, 0x92, 0x44, 0xeb, 0x20, 0xa4,
	0xc6, 0x99, 0x8a, 0xb7, 0x58, 0xa1, 0x17, 0x70, 0x9d, 0x57, 0x5e, 0x48, 0x05, 0x85, 0xfa, 0xc4,
	0x38, 0xcf, 0xf3, 0xcf, 0xdb, 0xe3, 0xa2, 0x8b, 0x10, 0x9c, 0xa9, 0xcc, 0x2b, 0x6a, 0xaa, 0x6a,
	0x74, 0x03, 0x75, 0xf9, 0x7f, 0xa0, 0x5e, 0xa8, 0xe1, 0x95, 0x6c, 0xee, 0x89, 0x53, 0xa8, 0xc6,
	0x84, 0x63, 0x19, 0xb8, 0x51, 0x55, 0x56, 0xf5, 0xfe, 0x6c, 0x55, 0xe1, 0xb0, 0xf9, 0xa9, 0x60,
	0xd9, 0x94, 0xa7, 0x5b, 0x67, 0x2f, 0xd2, 0xfc, 0x0a, 0xf5, 0xa3, 0x11, 0xd2, 0x41, 0xfb, 0x4e,
	0xb6, 0xc5, 0xbd, 0x95, 0xe5, 0xe1, 0x3a, 0x95, 0xff, 0xe9, 0x3a, 0xbd, 0x2d, 0xbf, 0x2e, 0x0d,
	0x3a, 0x60, 0x88, 0x97, 0xeb, 0x24, 0x63, 0x00, 0x7d, 0xf9, 0xb5, 0x98, 0x49, 0x9f, 0x67, 0xa5,
	0x65, 0x45, 0x19, 0xde, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xbe, 0x6c, 0xfd, 0x78, 0x04,
	0x00, 0x00,
}
